name: Build

on:
  push:
  pull_request:
  schedule:
    - cron: '40 5 * * *'   # every day at 5:40

jobs:
  check:
    name: Check

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
      - name: "Run `cargo check`"
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: rust-src, llvm-tools-preview

      # install QEMU
      - name: Install QEMU (Linux)
        run: sudo apt update && sudo apt install qemu-system-x86
        if: runner.os == 'Linux'
      - name: Install QEMU (macOS)
        run: brew install qemu
        if: runner.os == 'macOS'
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1
      - name: Install QEMU (Windows)
        run: |
          choco install qemu --version 2021.5.5
          echo "$Env:Programfiles\qemu" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        if: runner.os == 'Windows'
        shell: pwsh
      - name: "Print QEMU Version"
        run: qemu-system-x86_64 --version

      - name: Run `cargo test`
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: "Example: `basic`"
        working-directory: examples/basic
        run: cargo kimage

      - name: "Example: `test_framework` example"
        working-directory: examples/test_framework
        run: cargo ktest

  fmt:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: rustfmt
      - name: Run `cargo fmt --all -- --check`
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: clippy
      - name: Run `cargo clippy`
        uses: actions-rs/cargo@v1
        with:
          command: clippy
